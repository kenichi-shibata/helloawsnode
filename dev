#!/bin/bash

inside_docker() {
  if [ ! -f /.dockerenv ]; then
    echo "Not inside dev container please execute ./dev bash first";
    exit 1
  fi
}

outside_docker() {
  if [  -f /.dockerenv ]; then
    echo "Not outside dev container please execute exit first ";
    exit 1
  fi
}

install-deb() {
  wget https://releases.hashicorp.com/vagrant/2.0.0/vagrant_2.0.0_x86_64.deb
  sudo dpkg -i vagrant_2.0.0_x86_64.deb
  rm vagrant_2.0.0_x86_64.deb
}

detectos() {
if [ -f /etc/os-release ]; then
    # freedesktop.org and systemd
    . /etc/os-release
    OS=$NAME
    VER=$VERSION_ID
elif type lsb_release >/dev/null 2>&1; then
    # linuxbase.org
    OS=$(lsb_release -si)
    VER=$(lsb_release -sr)
elif [ -f /etc/lsb-release ]; then
    # For some versions of Debian/Ubuntu without lsb_release command
    . /etc/lsb-release
    OS=$DISTRIB_ID
    VER=$DISTRIB_RELEASE
elif [ -f /etc/debian_version ]; then
    # Older Debian/Ubuntu/etc.
    OS=Debian
    VER=$(cat /etc/debian_version)
elif [ -f /etc/SuSe-release ]; then
    # Older SuSE/etc.
    ...
elif [ -f /etc/redhat-release ]; then
    # Older Red Hat, CentOS, etc.
    ...
else
    # Fall back to uname, e.g. "Linux <version>", also works for BSD, etc.
    OS=$(uname -s)
    VER=$(uname -r)
fi

echo $OS 
echo $VER
}

detectarch() {
 ARCH=$(uname -i)
 echo $ARCH
}

case $1 in 
  install) 
       outside_docker
       detectos
       detectarch
       ;;
  install-deb) 
        outside_docker
        install-deb
        ;;    
  start) 
        outside_docker
        sudo vagrant up
        ;;
  bash)
        outside_docker
        sudo docker exec -it helloawsnode-dev-container bash -c 'cd /helloawsnode; exec "${SHELL:-sh}"'
        ;;
  up)
        inside_docker
        sudo docker-compose -f dev-docker-compose.yaml up -d 
        ;;
  logs)  
       inside_docker
       sudo docker-compose logs -f 
       ;;
  test) 
       inside_docker 
       while true ; do curl localhost:80; sleep 1 ; done
       ;;
  scale) 
        inside_docker
        if [ $# -lt 2 ]
        then
          echo "scale needs a number"
        fi
        echo "scaling node app to $2"
        sudo docker-compose -f dev-docker-compose.yaml scale node-app=$2
        ;;
  down) 
        inside_docker
        sudo docker-compose -f dev-docker-compose.yaml down
        ;;
  end) 
        outside_docker
        sudo vagrant destroy
        ;;
        *)
            echo $"Usage: $0 {start|bash|up|down|end|scale}"
            exit 1
esac
